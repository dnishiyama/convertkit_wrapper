!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALL_SUBS	modules/ck_utils.py	/^	ALL_SUBS = {'data_name': 'subscribers', 'api_type': 'other'}$/;"	v	class:CK_Api
CK_API_KEY	modules/ck_utils.py	/^CK_API_KEY = os.environ['CK_API_KEY']$/;"	v
CK_API_SECRET	modules/ck_utils.py	/^CK_API_SECRET = os.environ['CK_API_SECRET']$/;"	v
CK_Api	modules/ck_utils.py	/^class CK_Api(Enum):$/;"	c
Counter	modules/ck_utils.py	/^from collections import Counter$/;"	i
Enum	modules/ck_utils.py	/^from enum import Enum, auto$/;"	i
FORM_LIST	modules/ck_utils.py	/^	FORM_LIST = {'data_name': 'forms', 'api_type': 'list'}$/;"	v	class:CK_Api
FORM_SUBS	modules/ck_utils.py	/^	FORM_SUBS = {'data_name': 'forms', 'api_type': 'subscriptions', 'item_type': 'url'}$/;"	v	class:CK_Api
Nominatim	modules/ck_utils.py	/^from geopy.geocoders import Nominatim$/;"	i
PURCHASE_LIST	modules/ck_utils.py	/^	PURCHASE_LIST = {'data_name': 'purchases', 'api_type': 'list'}$/;"	v	class:CK_Api
SEQ_EMAILS	modules/ck_utils.py	/^	SEQ_EMAILS = {'data_name': 'courses', 'api_type': 'other'}$/;"	v	class:CK_Api
SEQ_LIST	modules/ck_utils.py	/^	SEQ_LIST = {'data_name': 'courses', 'api_type': 'list'} # courses is legacy name for v3$/;"	v	class:CK_Api
SEQ_SUBS	modules/ck_utils.py	/^	SEQ_SUBS = {'data_name': 'courses', 'api_type': 'subscriptions', 'item_type': 'url'} # courses is legacy name for v3$/;"	v	class:CK_Api
SUB	modules/ck_utils.py	/^	SUB = {'data_name': 'subscribers', 'api_type': 'other', 'item_type':'url'}$/;"	v	class:CK_Api
SUB_EMAIL	modules/ck_utils.py	/^	SUB_EMAIL = {'data_name': 'subscribers', 'api_type': 'other', 'item_type': 'payload', "payload_type": "email_address"} $/;"	v	class:CK_Api
SubscriberDNE	modules/ck_utils.py	/^class SubscriberDNE(Exception): pass$/;"	c
TAG_LIST	modules/ck_utils.py	/^	TAG_LIST = {'data_name': 'tags', 'api_type': 'list'}$/;"	v	class:CK_Api
TAG_SUBS	modules/ck_utils.py	/^	TAG_SUBS = {'data_name': 'tags', 'api_type': 'subscriptions', 'item_type': 'url'}$/;"	v	class:CK_Api
array_mismatch	modules/ck_utils.py	/^def array_mismatch(array1, array2):$/;"	f
asks	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
auto	modules/ck_utils.py	/^from enum import Enum, auto$/;"	i
averages	modules/ck_utils.py	/^averages = {'open_rate': 0.4015185973149601, 'click_rate': 0.08394148324934214, 'rec_open_rate': 0.5778960726689762, 'rec_click_rate': 0.2633010380622846, 'course_open_rate': 0.44535748106058454, 'course_click_rate': 0.22035260930888007, 'past_course_open_rate': 0.4693398692810468, 'past_course_click_rate': 0.1440803621958105}$/;"	v
boto3	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
bs4	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
clicked_before	modules/ck_utils.py	/^def clicked_before(x, ref_date): return bool(x['click_date'] and x['click_date'] < ref_date)$/;"	f
copy	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
course_email_ids	modules/ck_utils.py	/^course_email_ids = [1024762, 1033254, 1024765, 1024766, 1024767, 1024768, 1024769, 1088185, 1088196, 1088197, 1088198, 1088199, 1088200, 1191656, 1191657, 1191658, 1191659, 1191660, 1191661, 1191662, 1313872, 1314658, 1313641, 1313860, 1313861, 1313863, 1866878, 1866873, 1866874, 1866875, 1866876, 1866877, 1866879, 2014727, 2014728, 2014729, 2014730, 2016262, 2014731, 2014732, 2014743, 2014744, 2014745, 2014746, 2177600, 2177601, 2177602, 2177603, 2177604, 2177605, 2177606, 2208048, 2208049, 2208050, 2208051, 2208052, 2208053, 2208054]$/;"	v
date	modules/ck_utils.py	/^from datetime import timedelta, date, datetime$/;"	i
datetime	modules/ck_utils.py	/^from datetime import timedelta, date, datetime$/;"	i
day_bools	modules/ck_utils.py	/^	def day_bools(day_dict):$/;"	f	function:get_sequence_end_date
delivered_after	modules/ck_utils.py	/^def delivered_after(x, ref_date): return x['deliver_date'] > ref_date$/;"	f
delivered_before	modules/ck_utils.py	/^def delivered_before(x, ref_date): return x['deliver_date'] < ref_date$/;"	f
determine_subscribe_date	modules/ck_utils.py	/^def determine_subscribe_date(sub_id, cursor=None, session=None, ck_app_session=None):$/;"	f
error_catching	modules/ck_utils.py	/^def error_catching(resp, url):$/;"	f
extract_ck_api_data	modules/ck_utils.py	/^def extract_ck_api_data(ck_api, json_resp):$/;"	f
extract_emails_from_soup	modules/ck_utils.py	/^def extract_emails_from_soup(soup):$/;"	f
extract_subscribers_from_soup	modules/ck_utils.py	/^def extract_subscribers_from_soup(soup):$/;"	f
extract_totalpages_from_soup	modules/ck_utils.py	/^def extract_totalpages_from_soup(soup):$/;"	f
fetch	modules/ck_utils.py	/^async def fetch(url, ck_api, data, headers, results, page):$/;"	f
get_all_form_subscriptions	modules/ck_utils.py	/^def get_all_form_subscriptions(session):$/;"	f
get_all_seq_sub_data	modules/ck_utils.py	/^def get_all_seq_sub_data(seq_id, test=False, session=None, **kwargs):$/;"	f
get_all_sub_data	modules/ck_utils.py	/^def get_all_sub_data(test=False, session=None, **kwargs): $/;"	f
get_api_data	modules/ck_utils.py	/^def get_api_data(ck_api: CK_Api, api_item: int, include_unsubscribers=False, test=False, session=None, **kwargs):$/;"	f
get_api_data_async	modules/ck_utils.py	/^async def get_api_data_async(url, ck_api, data, headers, total_pages):$/;"	f
get_api_single_subscribers_async	modules/ck_utils.py	/^async def get_api_single_subscribers_async(subscribers):$/;"	f
get_async_ck_session	modules/ck_utils.py	/^async def get_async_ck_session(connections):$/;"	f
get_ck_session	modules/ck_utils.py	/^def get_ck_session():$/;"	f
get_detailed_purchase_and_launch_data	modules/ck_utils.py	/^def get_detailed_purchase_and_launch_data(cursor):$/;"	f
get_flat_sub_dict	modules/ck_utils.py	/^def get_flat_sub_dict(sub):$/;"	f
get_lat_and_lng	modules/ck_utils.py	/^def get_lat_and_lng(loc_city:str=None, loc_state:str=None, geolocator=None):$/;"	f
get_locless_subs	modules/ck_utils.py	/^def get_locless_subs(test=False, smart_stop=True):$/;"	f
get_mysql_dicts	modules/ck_utils.py	/^def get_mysql_dicts(cursor):$/;"	f
get_non_active_sub_data	modules/ck_utils.py	/^def get_non_active_sub_data(step=500):$/;"	f
get_past_launch_completions	modules/ck_utils.py	/^def get_past_launch_completions(conn = None, scrape_emails=False, include_unsubscribers=True, test=False):$/;"	f
get_rate	modules/ck_utils.py	/^def get_rate(email_list, act_before=None, del_before=None, _open=True):$/;"	f
get_recent_received_email_pos_from_seq	modules/ck_utils.py	/^	def get_recent_received_email_pos_from_seq(seq_dict, email_dict):$/;"	f	function:get_sequence_end_date
get_seq_dict	modules/ck_utils.py	/^def get_seq_dict(seq_id, session = None):$/;"	f
get_sequence_end_date	modules/ck_utils.py	/^def get_sequence_end_date(seq_dict, email_dict, create_date=None, sub_id=None, show=False, seq_id=None, ignore_warnings=False):$/;"	f
get_single_email_delay	modules/ck_utils.py	/^	def get_single_email_delay(email_dict, start_date, seq_dict, current_email=0):$/;"	f	function:get_sequence_end_date
get_single_subscriber	modules/ck_utils.py	/^def get_single_subscriber(session=None, email_address:str = None, subscriber_id:int = None, cancelled=False):$/;"	f
get_sub_data_for_locless	modules/ck_utils.py	/^def get_sub_data_for_locless(last_sub=None, test=False):$/;"	f
get_subscribe_date_from_email_click	modules/ck_utils.py	/^def get_subscribe_date_from_email_click(sub_id, conn, force_date=False):$/;"	f
get_upcoming_launch_completions	modules/ck_utils.py	/^def get_upcoming_launch_completions(conn=None, scrape_emails=False, test=False):	$/;"	f
has_attrs	modules/ck_utils.py	/^def has_attrs(subscriber, _all=True, **attrs):$/;"	f
include	modules/ck_utils.py	/^def include(item, _all=True, **attrs):$/;"	f
iso3166	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
json	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
logging	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
manual_ck_unsub_update	modules/ck_utils.py	/^def manual_ck_unsub_update(sub_id, cursor, ck_app_session=None, session=None):$/;"	f
manually_add_location	modules/ck_utils.py	/^def manually_add_location(sub_id=None, city=None, state=None, rds_only=True, gc=None, conn=None):$/;"	f
matplotlib	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
mysql_email_list	modules/ck_utils.py	/^def mysql_email_list(sub_id, conn):$/;"	f
np	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
opened_before	modules/ck_utils.py	/^def opened_before(x, ref_date): return bool((x['open_date'] and x['open_date'] < ref_date) or (x['click_date'] and x['click_date'] < ref_date))$/;"	f
os	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
pd	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
pdb	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
plt	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
prep_ck_csv	modules/ck_utils.py	/^def prep_ck_csv(csv_path):$/;"	f
pytz	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
re	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
refresh_sub_list	modules/ck_utils.py	/^def refresh_sub_list(sub_dict):$/;"	f
requests	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
rg	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
save_email_data	modules/ck_utils.py	/^def save_email_data(email_data:list, conn):$/;"	f
scrape_all_email_data	modules/ck_utils.py	/^def scrape_all_email_data(conn, skip_to=None, exclude_freshness:int=None, only_active=True, connections=20, step_by=100):$/;"	f
scrape_all_non_active_subscribers	modules/ck_utils.py	/^def scrape_all_non_active_subscribers():$/;"	f
scrape_email_list	modules/ck_utils.py	/^def scrape_email_list(sub_id, ck_app_session=None):$/;"	f
scrape_email_list_async	modules/ck_utils.py	/^async def scrape_email_list_async(sub_id, ck_app_session=None, results=[]):$/;"	f
scrape_email_list_executor_async	modules/ck_utils.py	/^async def scrape_email_list_executor_async(subscriber_ids, async_session):$/;"	f
scrape_loc_from_app	modules/ck_utils.py	/^def scrape_loc_from_app(sub_id, ck_app_session=None):$/;"	f
scrape_subscribers_from_all_pages_of_url_async	modules/ck_utils.py	/^async def scrape_subscribers_from_all_pages_of_url_async(url, async_session, nursery, results, spawn_children=False):$/;"	f
scrape_subscribers_from_urls_executor_async	modules/ck_utils.py	/^async def scrape_subscribers_from_urls_executor_async(urls:list, async_session):$/;"	f
scrape_unsub_datetime	modules/ck_utils.py	/^def scrape_unsub_datetime(sub_id, ck_app_session=None):$/;"	f
specific_purchase_rate	modules/ck_utils.py	/^def specific_purchase_rate(purchases, launches, _all=True, cursor=None, **attrs):$/;"	f
sub_quality	modules/ck_utils.py	/^def sub_quality(cursor, sub_id):$/;"	f
sub_quality_from_emails	modules/ck_utils.py	/^def sub_quality_from_emails(emails, sub_date):$/;"	f
sys	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
tag_subscriber	modules/ck_utils.py	/^def tag_subscriber(email, tag_id, session):$/;"	f
time	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
timedelta	modules/ck_utils.py	/^from datetime import timedelta, date, datetime$/;"	i
transfer_good_mismatches_to_rds	modules/ck_utils.py	/^def transfer_good_mismatches_to_rds(cursor, session, rds_data, ck_data):$/;"	f
trio	modules/ck_utils.py	/^import requests, time, json, bs4, os, pandas as pd, re, pytz, logging, pdb, boto3, matplotlib.pyplot as plt, reverse_geocoder as rg, iso3166, asks, trio, copy, sys, numpy as np$/;"	i
update_ck_sub_with_misc	modules/ck_utils.py	/^def update_ck_sub_with_misc(sub_id:int, session=None, **fields):$/;"	f
update_rds_with_non_actives	modules/ck_utils.py	/^def update_rds_with_non_actives(cursor): $/;"	f
update_single_subscriber	modules/ck_utils.py	/^def update_single_subscriber(sub_id, cursor, ck_app_session=None, do_location=False, geolocator=None, overwrite=False):$/;"	f
update_sub_everywhere_with_misc	modules/ck_utils.py	/^def update_sub_everywhere_with_misc(sub_id:int, cursor, session=None, **fields):$/;"	f
update_sub_with_loc	modules/ck_utils.py	/^def update_sub_with_loc(sub_id:int, loc_city:str, loc_state:str): $/;"	f
update_subs_with_scraped_locations	modules/ck_utils.py	/^def update_subs_with_scraped_locations(notify=False, smart_stop=True, ck_app_session=None):$/;"	f
update_subscriber_in_rds	modules/ck_utils.py	/^def update_subscriber_in_rds(sub_id, cursor, sub_data=None, session=None):$/;"	f
update_unsub_with_day	modules/ck_utils.py	/^def update_unsub_with_day(unsub_id: int, day: str):$/;"	f
url_and_data	modules/ck_utils.py	/^	def url_and_data(self, data):$/;"	m	class:CK_Api
